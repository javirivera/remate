{
  "name": "gulp-deporder",
  "description": "Reorder by dependencies",
  "version": "1.1.0",
  "homepage": "http://github.com/mkleehammer/gulp-deporder",
  "repository": {
    "type": "git",
    "url": "git://github.com/mkleehammer/gulp-deporder.git"
  },
  "author": {
    "name": "michael@kleehammer.com"
  },
  "main": "./index.js",
  "keywords": [
    "gulpplugin"
  ],
  "engines": {
    "node": ">= 0.4.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "through": "~2.3.4",
    "gulp-util": "~2.2.14"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "readme": "Gulp DepOrder plugin\n====================\n\nThis plugin will reorder JavaScript or CSS files in the stream based on comments at the top of files.\nThis is useful for automatically ordering files before concatenating them without a full-blown dependency system like requirejs.\n\nThe plugin attempts to reorder as little as possible so you can manually order large sets of\nfiles and only use the comments to fine tune.\n\n# How to use\n\n### Gulp\nFor JavaScript files:\n```javascript\nvar deporder = require('gulp-deporder');\nvar concat = require('gulp-concat');\n\ngulp.task('scripts', function() {\n    return gulp.src('./lib/*.js')\n        .pipe(deporder())\n        .pipe(concat('all.js'))\n        .pipe(gulp.dest('./dist/'))\n});\n```\n\nFor CSS files:\n```javascript\nvar deporder = require('gulp-deporder');\nvar concat = require('gulp-concat');\n\ngulp.task('styles', function() {\n    return gulp.src('./lib/*.css')\n        .pipe(deporder())\n        .pipe(concat('all.css'))\n        .pipe(gulp.dest('./dist/'))\n});\n```\n\n### JavaScript\n\nThere is several ways to specify dependencies:\nFirst is single-line:\n``// requires: foo.js bar.js``\nSecond is multi-line if you have lot of dependencies:\n```javascript\n/* requires:\nfoo.js\nbar.js\n*/\n```\n\n### CSS\nSince CSS doesn't support single-line comments, you should only use multi-line comments:\n```css\n/* requires:\nfoo.css\nbar.css\n*/\n```\n\n## Write less, do more\nYou also need know, that all examples above uses ``requires: foo.js``, but you can also use it without trailing \"s\", like ``require: foo.js`` or even without colon like ``requires foo.js`` or ``require foo.js``.\nAnd, of course, in multi-line style you can use spaces to indent your dependencies, like:\n```javascript\n/* require\n  foo/bar.js\n      bar/foo.js\n*/\n```\nAll of those spaces will be cleaned and dependencies are processed correctly.\n\n# LICENSE\n\n(MIT License)\n\nCopyright (c) 2014 Michael Kleehammer <michael@kleehammer.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mkleehammer/gulp-deporder/issues"
  },
  "_id": "gulp-deporder@1.1.0",
  "_from": "gulp-deporder@^1.1.0"
}
