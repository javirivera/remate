{
  "name": "postcss-color",
  "version": "1.0.1",
  "description": "PostCSS plugin to transform latest W3C CSS color module syntax to more compatible CSS",
  "keywords": [
    "css",
    "postcss",
    "postcss-plugins",
    "color",
    "colour",
    "rgb",
    "hwb",
    "rebeccapurple",
    "color-function",
    "function"
  ],
  "author": {
    "name": "MoOx"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/postcss/postcss-color.git"
  },
  "files": [
    "CHANGELOG.md",
    "LICENSE",
    "README.md",
    "lib",
    "index.js"
  ],
  "dependencies": {
    "balanced-match": "^0.1.0",
    "color": "^0.7.1",
    "css-color-function": "^1.1.1",
    "reduce-function-call": "^1.0.1"
  },
  "devDependencies": {
    "jscs": "^1.5.9",
    "jshint": "^2.5.2",
    "jshint-stylish": "^0.4.0",
    "postcss": "^2.1.0",
    "tap-colorize": "^1.2.0",
    "tape": "^2.13.4"
  },
  "scripts": {
    "jscs": "jscs *.js **/*.js",
    "jshint": "jshint . --exclude node_modules --reporter node_modules/jshint-stylish/stylish.js",
    "test": "npm run jscs && npm run jshint && tape test | tap-colorize"
  },
  "readme": "# postcss-color [![Build Status](https://travis-ci.org/postcss/postcss-color.png)](https://travis-ci.org/postcss/postcss-color)\n\n> [PostCSS](https://github.com/postcss/postcss) plugin to transform latest [W3C CSS color module](http://dev.w3.org/csswg/css-color/#modifying-colors) syntax to more compatible CSS.\n\nThis plugin can:\n\n- transform [`color()`](http://dev.w3.org/csswg/css-color/#modifying-colors) to `rgb()` (or `rgba()`).\n- transform [RGBA hexadecimal notations (`#RRGGBBAA` or `#RGBA`)](http://dev.w3.org/csswg/css-color/#hex-notation) to `rgba()`.\n- transform [`hwb()`](http://dev.w3.org/csswg/css-color/#the-hwb-notation) to `rgb()` (or `rgba()`).\n- transform [`rebeccapurple`](http://dev.w3.org/csswg/css-color/#valuedef-color-rebeccapurple) to `rgb()`.\n\n## Installation\n\n    $ npm install postcss-color\n\n## Usage\n\n```js\n// dependencies\nvar fs = require(\"fs\")\nvar postcss = require(\"postcss\")\nvar color = require(\"postcss-color\")\n\n// css to be processed\nvar css = fs.readFileSync(\"input.css\", \"utf8\")\n\n// process css\nvar output = postcss()\n  .use(color())\n  .process(css)\n  .css\n```\n\nUsing this `input.css`:\n\n```css\nbody {\n  background:\n    rgb(102, 51, 153)\n    linear-gradient(\n      color(rebeccapurple a(50%)),\n      hwb(0, 20%, 40%),\n      color(hwb(0, 20%, 40%, .5) a(+10%)),\n      color(#9d9c a(90%))\n    )\n}\n\n```\n\nyou will get:\n\n```css\nbody {\n  background:\n    rgb(102, 51, 153)\n    linear-gradient(\n      rgba(102, 51, 153, 0.5),\n      rgb(153, 51, 51),\n      rgba(153, 51, 51, 0.55),\n      rgba(153, 221, 153, 0.9)\n    )\n}\n```\n\nCheckout [tests](test) for more examples.\n\n### Options\n\n#### `color` (default: `true`)\n\nAllow you to disable transformation of `color()`\n\n#### `hexAlpha` (default: `true`)\n\nAllow you to disable transformation of `#RRGGBBAA` or `#RGBA`\n\n#### `hwb` (default: `true`)\n\nAllow you to disable transformation of `hwb()`\n\n#### `rebeccapurple` (default: `true`)\n\nAllow you to disable transformation of `rebeccapurple`\n\n---\n\n## Contributing\n\nWork on a branch, install dev-dependencies, respect coding style & run tests before submitting a bug fix or a feature.\n\n    $ git clone https://github.com/postcss/postcss-color.git\n    $ git checkout -b patch-1\n    $ npm install\n    $ npm test\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/postcss/postcss-color/issues"
  },
  "homepage": "https://github.com/postcss/postcss-color",
  "_id": "postcss-color@1.0.1",
  "_from": "postcss-color@^1.0.0"
}
